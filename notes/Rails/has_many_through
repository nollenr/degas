blend (table: blends, class: Blend)
  has_many :blend_compositions
  has_many :grapes, through: :blend_compositions

blend_composition (table: blend_compositions, class: BlendComposition)
  belongs_to :blend
  belongs_to :grape

grape (table: grapes, class: Grape)
  has_many :blend_compositions
  has_many :blends, through: blend_compositions

@myblend = Blend.new
@myblend.name = 'testblend1'
@myblend.save

@myblend=Blend.new(name: 'testblend2')
@myblend.save


"105";"Garnatxa / Grenache / Garnacha / Cannonau";
"181";"Mourvèdre / Monastrell / Mataro";
"264";"Shiraz / Syrah";
"312";"Zinfandel / Crljenak Kaštelanski / Primitivo";


@mycollection=@myblend.blend_compositions.build(grape_id: 264, percent_of_grape: 50)
@mycollection=@myblend.blend_compositions.build(grape_id: 312, percent_of_grape: 50)
@mycollection.save
@myblend.blend_compositions.size # 2

# BUT, it doesn't have 2... only the second one is saved to the database.
=====================================================
@blend = Blend.new(name: "testblend1")
@blend.save
@bc1 = BlendComposition.new(percent_of_grape: 50, grape_id: 264)
@bc2 = BlendComposition.new(percent_of_grape: 50, grape_id: 312)
# This seems to continue to work for adding new blend compositions
@blend.blend_compositions<< [@bc1, @bc2]
=====================================================
# This only seems to work for initialization (can't add new ones using this method)
@blend.blend_compositions=[@bc1, @bc2]
